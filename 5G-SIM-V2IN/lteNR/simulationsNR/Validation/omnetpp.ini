[General]

cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 10s
cmdenv-interactive = true

network = nr.simulationsNR.Validation.ValidationScenario

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = true
print-undisposed = true

sim-time-limit = 86s #15Min

seed-set = ${0,1,2}

simtime-resolution = ps
#**.scalar-recording = true
#**.vector-recording = true

#**.statistic-recording = false
**.letNic.**.statistic-recording = true
**.letNic.**.scalar-recording = true
**.letNic.**.vector-recording = true
**.udpApp[*].statistic-recording = true
**.udpApp[*].scalar-recording = true
**.udpApp[*].*.vector-recording = true
*.server*.**.statistic-recording = true

**.ppp[*].**.statistic-recording = false
**.sctp.**.statistic-recording = false
**.sctp.statistic-recording = false
**.ppp.**.statistic-recording = false
**.pppIf.**.statistic-recording = false
**.pppInterface.**.statistic-recording = false
**.x2App[*].**.statistic-recording = false
**.x2ppp[*].**.statistic-recording = false
**.networkLayer.**.statistic-recording = false
**.lo0.**.statistic-recording = false
**.am.**.statistic-recording = false
**.am.statistic-recording = false
**.client.**.statistic-recording = false
**.lteNic.sdap.**.statistic-recording = false
**.upf.**.statistic-recording = false
**.ppp*.**.statistic-recording = false
**.router.**.statistic-recording = false

**.coreDebug = false
**.routingRecorder.enabled = false

*.playgroundSizeX = 4500m
*.playgroundSizeY = 4000m
*.playgroundSizeZ = 50m

##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.moduleType = "nr.corenetwork.nodes.cars.Car"
*.veinsManager.moduleName = "car"
*.veinsManager.moduleDisplayString = "*='i=veins/node/car;is=vs'"
*.veinsManager.launchConfig = xmldoc("test.launchd.xml")
*.veinsManager.autoShutdown = true
*.veinsManager.updateInterval = 0.01s

*.obstacles.obstacles = xmldoc("config.xml", "//AnalogueModel[@type='SimpleObstacleShadowing']/obstacles")
*.annotations.draw = true

##########################################################
#                      Mobility                          #
##########################################################
*.car[*].mobilityType = "VeinsInetMobility"

**.cellInfo.positionUpdateInterval = 0.01s

##########################################################
#      IP configuration for dynamic-created UEs          #
##########################################################
# enrolled multicast groups must be set in the HostAutoConfigurator (instead of demo.xml), seperated by a single space character
*.car[*].configurator.mcastGroups = "224.0.0.10"

##########################################################
#			         channel parameters                  #
##########################################################
#**.channelControl.pMax = 20W
#**.channelControl.alpha = 2.0
#**.channelControl.sat = -80dBm

**.d2dCapable = false

**.scenarioNR = "DENSE_URBAN_EMBB"
**.channelModelType = "UMa_B"      
**.shadowing = false
**.nodeb_height = 25 # 25 is default
**.ue_height = 1.5
**.carrierfrequency = 2
**.building_height = 20 #20 is default
**.street_wide = 20
**.antennaGainUe = 0
**.antennGainEnB = 8
**.antennGainMicro = 5
**.thermalNoise = -104.5
**.ue_noise_figure = 7
**.bs_noise_figure = 5
**.cable_loss = 2
**.fading = false 
**.fading_type = "JAKES"
**.fading_paths = 1
**.extCell_interference = false
**.downlink_interference = false
**.uplink_interference = false
**.tolerateMaxDistViolation = false
**.targetBler = 0.1
**.harqReduction = 0.1
**.lambdaMinTh = 0.02
**.lambdaMaxTh = 0.2
**.lambdaRatioTh = 20
**.correlation_distance = 1
**.cqiFlag = false

**.fixed_los = false #switch between LOS and NLOS
**.dynamic_los = false
**.dynamicNlos = false #if true, NLOS evaluation in 2D is conducted, if false, NLOS evaluation is done with probability formulas
**.NlosEvaluationIn3D = false # if dynamicNlos is false, this flag is also false, if both flags are true, the NLOS is evaluated in 3D, only relevant when obstacles (buildings) are included (e.g., urban scenario)

**.mac.schedulingDisciplineUl = "PF"
**.mac.schedulingDisciplineDl = "PF"
#PF
#MAXCI
#DRR

#**.antennaCws = "2;"
#**.txDirection = "ANISOTROPIC"
**.txDirection = "OMNI" #physical layer parameter

##########################################################
#              LTE specific parameters                   #
##########################################################

# Enable dynamic association of UEs (based on best SINR)
**.dynamicCellAssociation = true

**.car[*].macCellId = 1   # useless if dynamic association is disabled
**.car[*].masterId = 1     # useless if dynamic association is disabled
**.gNodeB1.macCellId = 1
**.gNodeB1.macNodeId = 1
**.gNodeBCount = 1

# AMC
**.binder.numerology = 15
**.cellInfo.numRbDl = 25
**.cellInfo.numRbUl = 25
**.numBands = 1

##
**.nrHarq = true
**.numberHarqProcesses = 8
**.numberHarqProcessesNR = 16
**.fairRacScheduleInUL = false
**.newTxbeforeRtx = false
#

#2, 4, 6 or 8 codeblockgroups are allowed
**.useCodeBlockGroups = true
**.numberOfCodeBlockGroups = 8

############### AMC MODULE PARAMETERS ###############
**.rbAllocationType = "localized"
**.mac.amcMode = "AUTO"
**.feedbackType = "ALLBANDS"
**.feedbackGeneratorType = "IDEAL"
**.maxHarqRtx = 2
**.mac.queueSize = 1MiB
**.pfAlpha = 0.95
**.variationFlag = false # in LtePf --> uses QFIs for scheduling priority
**.rtxSignalisedFlagEnabled = true #in UL a RTX is send first before following packets
**.pfTmsAwareDL = false

############### Transmission Power ##################
**.ueTxPower = 26
#**.microTxPower = 20
**.eNodeBTxPower = 46

# Enable handover
**.enableHandover = true
**.broadcastMessageInterval = 0.1s
**.exchangeBuffersOnHandover = false # exchange all buffers between old and new masterNodeB

**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false

########################################################################################################################

[Config VideoDL]

*.car[*].numUdpApps = 1
*.server1.numUdpApps = 1
*.server2.numUdpApps = 0
*.server3.numUdpApps = 0

# DATA
**.car[*].mobility.initFromDisplayString = false


**.server1.udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerDL"
**.server1.udpApp[0].packetName = "Video"
**.server1.udpApp[0].localPort = 9999
**.server1.udpApp[0].destPort = 5088 #+ancestorIndex(1)
**.server1.udpApp[0].startTime = 0.1s
**.server1.udpApp[0].startTimeDL = 15s
**.server1.udpApp[0].sendInterval = 100ms
**.server1.udpApp[0].messageLength = 1400B

# Receivers
**.car[*].udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarDL"
**.car[*].udpApp[0].destAddresses = "server1"
**.car[*].udpApp[0].localPort = 5088 #+ancestorIndex(0) 
**.car[*].udpApp[0].destPort = 9999
**.car[*].udpApp[0].sendInterval = 100ms
**.car[*].udpApp[0].messageLength = 1400B

**.car[*].udpApp[0].considerDatasizeAndMessages = false
**.server1.udpApp[0].considerDatasizeAndMessages = false

# Enable handover
**.enableHandover = true
**.handoverLatency = 0.001s
**.handoverDelta = 0.0001s
#**.broadcastMessageInterval = 1s
**.exchangeBuffersOnHandover = false # exchange all buffers between old and new masterNodeB

result-dir = VideoDL-PF
output-vector-file = ${resultdir}/vector-${seedset}.vec
output-scalar-file = ${resultdir}/scalar-${seedset}.sca
#
######################################################################################################################################
#
[Config VideoUL]
# one VoIP and one Video app for this two clients
*.car[*].numUdpApps = 1
*.server1.numUdpApps = 1
*.server2.numUdpApps = 0
*.server3.numUdpApps = 0

# DATA
**.car[*].mobility.initFromDisplayString = false


**.car[*].udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarUL"
**.car[*].udpApp[0].packetName = "Video"
**.car[*].udpApp[0].destAddresses = "server1"
**.car[*].udpApp[0].localPort = 9999
**.car[*].udpApp[0].destPort = 5088 #+ancestorIndex(1)
**.car[*].udpApp[0].startTime = 15s
**.car[*].udpApp[0].sendInterval = 30ms
**.car[*].udpApp[0].messageLength = 1400B

**.car[*].udpApp[0].considerDatasizeAndMessages = false
**.server1.udpApp[0].considerDatasizeAndMessages = false

**.server1.udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerUL"
**.server1.udpApp[0].localPort = 5088 #+ancestorIndex(0) 
**.server1.udpApp[0].destPort = 9999
**.server1.udpApp[0].sendInterval = 30ms
**.server1.udpApp[0].messageLength = 1400B
**.server1.udpApp[0].startTimeDL = 15s

# Enable handover
**.enableHandover = true
**.handoverLatency = 0.001s
**.handoverDelta = 0.0001s
#**.broadcastMessageInterval = 1s
**.exchangeBuffersOnHandover = false # exchange all buffers between old and new masterNodeB

result-dir = VideoUL-PF
output-vector-file = ${resultdir}/vector-${seedset}.vec
output-scalar-file = ${resultdir}/scalar-${seedset}.sca

###################################################################################################################################

######################################################################################################################################
[Config UL4Applications]
# one VoIP and one Video app for this two clients
*.car[*].numUdpApps = 4
*.server1.numUdpApps = 4
*.server2.numUdpApps = 0
*.server3.numUdpApps = 0

# V2X
**.car[*].mobility.initFromDisplayString = false
**.considerDatasizeAndMessages = false
sim-time-limit = 200s

**.car[*].udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarUL"
**.car[*].udpApp[0].packetName = "V2X"
**.car[*].udpApp[0].destAddresses = "server1"
**.car[*].udpApp[0].localPort = 9999
**.car[*].udpApp[0].destPort = 5088 #+ancestorIndex(1)
**.car[*].udpApp[0].startTime = 15s
**.car[*].udpApp[0].messageLength = 200B
**.car[*].udpApp[0].sendInterval = 0.1s

**.server1.udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerUL"
**.server1.udpApp[0].localPort = 5088 #+ancestorIndex(0) 
**.server1.udpApp[0].destPort = 9999
**.server1.udpApp[0].messageLength = 300B
**.server1.udpApp[0].sendInterval = 0.1s

#Video
**.car[*].udpApp[1].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarUL"
**.car[*].udpApp[1].packetName = "VoIP"
**.car[*].udpApp[1].destAddresses = "server1"
**.car[*].udpApp[1].localPort = 9998
**.car[*].udpApp[1].destPort = 5087 #+ancestorIndex(1)
**.car[*].udpApp[1].startTime = 15s
**.car[*].udpApp[1].messageLength = 50B
**.car[*].udpApp[1].sendInterval = 0.02s

**.server1.udpApp[1].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerUL"
**.server1.udpApp[1].localPort = 5087 #+ancestorIndex(0) 
**.server1.udpApp[1].destPort = 9998
**.server1.udpApp[1].messageLength = 50B
**.server1.udpApp[1].sendInterval = 0.02s

#VoIP
**.car[*].udpApp[2].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarUL"
**.car[*].udpApp[2].packetName = "Video"
**.car[*].udpApp[2].destAddresses = "server1"
**.car[*].udpApp[2].localPort = 9997
**.car[*].udpApp[2].destPort = 5086 #+ancestorIndex(1)
**.car[*].udpApp[2].startTime = 15s
**.car[*].udpApp[2].messageLength = 1400B
**.car[*].udpApp[2].sendInterval = 0.07s

**.server1.udpApp[2].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerUL"
**.server1.udpApp[2].localPort = 5086 #+ancestorIndex(0) 
**.server1.udpApp[2].destPort = 9997
**.server1.udpApp[2].messageLength = 1400B
**.server1.udpApp[2].sendInterval = 0.07s

#Data
**.car[*].udpApp[3].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarUL"
**.car[*].udpApp[3].packetName = "Data"
**.car[*].udpApp[3].destAddresses = "server1"
**.car[*].udpApp[3].localPort = 9996
**.car[*].udpApp[3].destPort = 5085 #+ancestorIndex(1)
**.car[*].udpApp[3].startTime = 15s
**.car[*].udpApp[3].messageLength = 1400B
**.car[*].udpApp[3].sendInterval = 0.12s

**.server1.udpApp[3].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerUL"
**.server1.udpApp[3].localPort = 5085 #+ancestorIndex(0) 
**.server1.udpApp[3].destPort = 9996
**.server1.udpApp[3].sendInterval = 0.12s
**.server1.udpApp[3].messageLength = 1400B

# Enable handover
**.enableHandover = true
**.handoverLatency = 0.001s
**.handoverDelta = 0.0001s
#**.broadcastMessageInterval = 1s
**.exchangeBuffersOnHandover = false # exchange all buffers between old and new masterNodeB

result-dir = UL
output-vector-file = ${resultdir}/vector-${seedset}.vec
output-scalar-file = ${resultdir}/scalar-${seedset}.sca

###################################################################################################################################
#
[Config DL4Applications]
# one VoIP and one Video app for this two clients
*.car[*].numUdpApps = 4
*.server1.numUdpApps = 4
*.server2.numUdpApps = 0
*.server3.numUdpApps = 0

# Video Client Configuration
**.car[*].mobility.initFromDisplayString = false
**.considerDatasizeAndMessages = false
sim-time-limit = 200s


#VoIP
**.server1.udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerDL"
**.server1.udpApp[0].packetName = "V2X"
**.server1.udpApp[0].localPort = 9999
**.server1.udpApp[0].destPort = 5088 #+ancestorIndex(1)
**.server1.udpApp[0].startTime = 0.1s
**.server1.udpApp[0].startTimeDL = 15s
**.server1.udpApp[0].messageLength = 200B
**.server1.udpApp[0].sendInterval = 0.1s

**.car[*].udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarDL"
**.car[*].udpApp[0].destAddresses = "server1"
**.car[*].udpApp[0].localPort = 5088 #+ancestorIndex(0) 
**.car[*].udpApp[0].destPort = 9999
**.car[*].udpApp[0].messageLength = 200B
**.car[*].udpApp[0].sendInterval = 0.1s

#V2X
**.server1.udpApp[1].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerDL"
**.server1.udpApp[1].packetName = "VoIP"
**.server1.udpApp[1].localPort = 9998
**.server1.udpApp[1].destPort = 5087 #+ancestorIndex(1)
**.server1.udpApp[1].startTime = 0.1s
**.server1.udpApp[1].startTimeDL = 15s
**.server1.udpApp[1].messageLength = 50B
**.server1.udpApp[1].sendInterval = 0.02s

**.car[*].udpApp[1].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarDL"
**.car[*].udpApp[1].destAddresses = "server1"
**.car[*].udpApp[1].localPort = 5087 #+ancestorIndex(0) 
**.car[*].udpApp[1].destPort = 9998
**.car[*].udpApp[1].messageLength = 50B
**.car[*].udpApp[1].sendInterval = 0.02s

#Video
**.server1.udpApp[2].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerDL"
**.server1.udpApp[2].packetName = "Video"
**.server1.udpApp[2].localPort = 9997
**.server1.udpApp[2].destPort = 5086 #+ancestorIndex(1)
**.server1.udpApp[2].startTime = 0.1s
**.server1.udpApp[2].startTimeDL = 15s
**.server1.udpApp[2].messageLength = 1400B
**.server1.udpApp[2].sendInterval = 0.07s

**.car[*].udpApp[2].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarDL"
**.car[*].udpApp[2].destAddresses = "server1"
**.car[*].udpApp[2].localPort = 5086 #+ancestorIndex(0) 
**.car[*].udpApp[2].destPort = 9997
**.car[*].udpApp[2].messageLength = 1400B
**.car[*].udpApp[2].sendInterval = 0.07s

#Data
**.server1.udpApp[3].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerDL"
**.server1.udpApp[3].packetName = "Data"
**.server1.udpApp[3].localPort = 9996
**.server1.udpApp[3].destPort = 5085 #+ancestorIndex(1)
**.server1.udpApp[3].startTime = 0.1s
**.server1.udpApp[3].startTimeDL = 15s
**.server1.udpApp[3].messageLength = 1400B
**.server1.udpApp[3].sendInterval = 0.12s

**.car[*].udpApp[3].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarDL"
**.car[*].udpApp[3].destAddresses = "server1"
**.car[*].udpApp[3].localPort = 5085 #+ancestorIndex(0) 
**.car[*].udpApp[3].destPort = 9996
**.car[*].udpApp[3].messageLength = 1400B
**.car[*].udpApp[3].sendInterval = 0.12s

# Enable handover
**.enableHandover = true
**.handoverLatency = 0.001s
**.handoverDelta = 0.0001s
#**.broadcastMessageInterval = 1s
**.exchangeBuffersOnHandover = false # exchange all buffers between old and new masterNodeB

result-dir = DL
output-vector-file = ${resultdir}/vector-${seedset}.vec
output-scalar-file = ${resultdir}/scalar-${seedset}.sca

#########################################################################################################################
######################################################################################################################
[Config V2VCoopPercep]
# one VoIP and one Video app for this two clients
*.car[*].numUdpApps = 2
*.server1.numUdpApps = 1
*.server2.numUdpApps = 0
*.server3.numUdpApps = 0

**.v2vMulticastFlag = true
**.v2vMulticastDistance = 300.0
sim-time-limit = 300s

# V2X Sender
**.car[*].mobility.initFromDisplayString = false

**.car[*].udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarUL"
**.car[*].udpApp[0].packetName = "V2X"
**.car[*].udpApp[0].destAddresses = "server1"
**.car[*].udpApp[0].localPort = 9999
**.car[*].udpApp[0].destPort = 5088 #+ancestorIndex(1)
**.car[*].udpApp[0].startTime = 15s
**.car[*].udpApp[0].messageLength = 200B
**.car[*].udpApp[0].sendInterval = 100ms

# Destination Server
**.server1.udpApp[0].typename = "nr.apps.TrafficGenerator.TrafficGeneratorServerUL"
**.server1.udpApp[0].localPort = 5088 #+ancestorIndex(0) 
**.server1.udpApp[0].destPort = 9999
**.server1.udpApp[0].messageLength = 200B
**.server1.udpApp[0].sendInterval = 100ms

# for receiving broadcasted V2X Messages from other cars
**.car[*].udpApp[1].typename = "nr.apps.TrafficGenerator.TrafficGeneratorCarDL"
**.car[*].udpApp[1].localPort = 5088 #+ancestorIndex(0) 
**.car[*].udpApp[1].destPort = 9999
**.car[*].udpApp[1].sendInterval = 100ms
**.car[*].udpApp[1].messageLength = 200B

**.car[*].udpApp[0].considerDatasizeAndMessages = false
**.server1.udpApp[0].considerDatasizeAndMessages = false

# Enable handover
**.enableHandover = true
**.handoverLatency = 0.001s
**.handoverDelta = 0.0001s
#**.broadcastMessageInterval = 1s
**.exchangeBuffersOnHandover = false # exchange all buffers between old and new masterNodeB

result-dir = V2VCoopPercept-PF
output-vector-file = ${resultdir}/vector-${seedset}.vec
output-scalar-file = ${resultdir}/scalar-${seedset}.sca
########################################################################################################################
